import{_ as o,o as t,c as i,b as e,a,d as s,e as r,r as l}from"./app.2b5e4672.js";const d={},c=e("h1",{id:"how-to-implement-ssh-keys-in-ubuntu",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#how-to-implement-ssh-keys-in-ubuntu","aria-hidden":"true"},"#"),s(" How to implement SSH Keys in Ubuntu")],-1),h=e("p",null,"SSH keys provide an easy, passwordless and secure way of logging into your server.",-1),u=e("p",null,[s("The following tutorial has been tested on "),e("em",null,"Ubuntu 18.04.2 LTS (GNU/Linux 4.9.140-tegra aarch64)"),s(".")],-1),p=e("h2",{id:"install-a-terminal",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#install-a-terminal","aria-hidden":"true"},"#"),s(" Install a terminal")],-1),m=e("p",null,"The following applications are recommended:",-1),g=e("li",null,[s("Linux "),e("ul",null,[e("li",null,[s("The terminal can be open with "),e("kbd",null,"CTRL"),s("+"),e("kbd",null,"Alt"),s("+"),e("kbd",null,"T")])])],-1),b=s("Windows "),v={href:"https://chocolatey.org/packages/putty.install",target:"_blank",rel:"noopener noreferrer"},_=s("PuTTY"),y=s(" PuTTY is a free implementation of Telnet and SSH for Windows and Unix platforms."),k={href:"https://chocolatey.org/packages/git",target:"_blank",rel:"noopener noreferrer"},f=s("Git BASH"),w=s(" Git for Windows provides a BASH emulation used to run Git from the command line."),S=s("Android "),x={href:"https://play.google.com/store/apps/details?id=com.sonelli.juicessh",target:"_blank",rel:"noopener noreferrer"},T=s("JuiceSSH"),A=s(" Free SSH client for Android."),H=r(`<h2 id="check-for-existing-ssh-keys" tabindex="-1"><a class="header-anchor" href="#check-for-existing-ssh-keys" aria-hidden="true">#</a> Check for existing SSH keys</h2><p>First, check whether there are already keys on the computer you are using:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">ls</span> ~/.ssh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>If you see files named <code>id_rsa.pub</code> or <code>id_dsa.pub</code> you have keys set up already, so you can <a href="#copy-your-public-key-to-your-device">skip \u23E9</a> the generating keys step.</p><h2 id="generate-new-ssh-keys" tabindex="-1"><a class="header-anchor" href="#generate-new-ssh-keys" aria-hidden="true">#</a> Generate new SSH keys</h2><p>To generate new SSH keys enter the following command:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ssh-keygen
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Leave the field empty for no passphrase. Now look inside your .ssh directory:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">ls</span> ~/.ssh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>and you should see the files <code>id_rsa</code> and <code>id_rsa.pub</code>:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>authorized_keys  id_rsa  id_rsa.pub  known_hosts
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>The <code>id_rsa</code> file is your private key.</p><div class="custom-container warning"><p class="custom-container-title">Privacy warning</p><p>Keep this on your computer. Do not share it!</p></div><p>The <code>id_rsa.pub</code> file is your public key. This is what you share with machines you want to connect to. When the machine you try to connect to matches your public and private key, it will allow you to connect.</p><h2 id="copy-your-public-key-to-your-device" tabindex="-1"><a class="header-anchor" href="#copy-your-public-key-to-your-device" aria-hidden="true">#</a> Copy your public key to your device</h2><p>Copy the file manually over SSH:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">cat</span> ~/.ssh/id_rsa.pub <span class="token operator">|</span> <span class="token function">ssh</span> <span class="token operator">&lt;</span><span class="token environment constant">USER</span><span class="token operator">&gt;</span>@<span class="token operator">&lt;</span>IP-ADDRESS<span class="token operator">&gt;</span> <span class="token string">&quot;cat &gt;&gt; ~/.ssh/authorized_keys&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>or paste it from the clipboard. Replace <em>&lt;ID_RSA.PUB&gt;</em> by your key.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;&lt;ID_RSA.PUB&gt;&quot;</span> <span class="token operator">&gt;&gt;</span> ~/.ssh/authorized_keys
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container danger"><p class="custom-container-title">Do not overwrite your existing keys!</p><p><strong>&gt;</strong> overwrite the file <strong>&gt;&gt;</strong> append to the file</p></div><p>Now try ssh <code>&lt;USER&gt;@&lt;IP-ADDRESS&gt;</code> and you should connect without a password prompt.</p><h2 id="disable-password-authentication" tabindex="-1"><a class="header-anchor" href="#disable-password-authentication" aria-hidden="true">#</a> Disable password authentication</h2><p>Force the usage for the SSH Keys in WAN and keep the password access in LAN.</p><p>Edit the file <code>/etc/ssh/sshd_config</code></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">vim</span> /etc/ssh/sshd_config
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Press <kbd>a</kbd> to edit in vim. Apply the fellow changes:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>PasswordAuthentication no
ChallengeResponseAuthentication no

Match Address <span class="token number">192.168</span>.0.0/16
    PasswordAuthentication <span class="token function">yes</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Save and close the file.</p><blockquote><p>Press <kbd>ESC</kbd> and type <code>:wq</code></p></blockquote><p>Reload the ssh server:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl reload <span class="token function">ssh</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,31),P={class:"custom-container tip"},D=e("p",{class:"custom-container-title"},"TIP",-1),I=s("There are two "),R={href:"https://en.wikipedia.org/wiki/Motd_(Unix)",title:"message of the day",target:"_blank",rel:"noopener noreferrer"},E=s("motd"),N=s(", when connecting with the ssh keys. If you know how to fix this, please let me know."),U=e("p",null,"Done! \u{1F389}",-1);function L(q,B){const n=l("ExternalLinkIcon");return t(),i("div",null,[c,h,u,p,m,e("ul",null,[g,e("li",null,[b,e("ul",null,[e("li",null,[e("a",v,[_,a(n)]),y]),e("li",null,[e("a",k,[f,a(n)]),w])])]),e("li",null,[S,e("ul",null,[e("li",null,[e("a",x,[T,a(n)]),A])])])]),H,e("div",P,[D,e("p",null,[I,e("a",R,[E,a(n)]),N])]),U])}var W=o(d,[["render",L],["__file","secure-access-with-ssh-keys.html.vue"]]);export{W as default};
